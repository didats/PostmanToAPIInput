package main

import "strings"

// SwiftExporter Type struct of the exporter
type SwiftExporter struct {
	result string
}

func NewSwiftExporter() SwiftExporter {
	start := "//\n//	APIInput.swift\n//	Generated by github.com/didats/PostmanToAPIInput\n"
	start += "//\n//	Created by Didats Triadi\n"
	start += "//	MIT License. Use on your own risk\n//\n\nimport Foundation\n\n"
	start += "public struct APIInput {\n"
	
	return SwiftExporter{
		result: start
	}
}

func (swift *SwiftExporter) addVariable(key string) {
	swift.result += "\t\tlet " + key + ": String?\n"
}

func (swift *SwiftExporter) addToJSONItem(key string) {
	swift.result += "\t\tif let " + key + " = self." + key + " {\n"
	swift.result += "\t\t\tjson[\"" + key + "\"] = " + key + "\n"
	swift.result += "\t\t}"
}

func (swift *SwiftExporter) addPath(path string) {
	swift.result += "\t\tpublic var path: String {\n"
	swift.result += "\t\t\treturn \" " + path  + "\"\n"
	swift.result += "\t\t}\n"
}

func (swift *SwiftExporter) addMethod(method string) {
	swift.result += "\t\tpublic var method: String {\n"
	swift.result += "\t\t\treturn \" " + method  + "\"\n"
	swift.result += "\t\t}\n"
}

func (swift *SwiftExporter) addQueryURLs(keys []string) {
	urls += []string{}
	for _, key := range keys {
		urls = append(urls, key + "=\\(" + key + ")")
	}
	swift.result += "?" + strings.Join(urls, "&")
}

func (swift *SwiftExporter) createRequest(requestName string, baseName string) {
	
}